/* Modern Authentication Styles */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

:root {
  --primary: #6366f1;
  --primary-hover: #4f46e5;
  --primary-focus: rgba(99, 102, 241, 0.25);
  --primary-lighter: #818cf8;
  --success: #10b981;
  --error: #ef4444;
  --background: #f9fafb;
  --foreground: #1f2937;
  --muted: #6b7280;
  --border: #e5e7eb;
  --card: white;
  --card-foreground: #1f2937;
  --radius: 0.5rem;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

/* Main Container Styles */
body.auth-page {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  background-color: var(--background);
  color: var(--foreground);
  min-height: 100vh;
  margin: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1.5rem;
  background-image: url('/assets/auth-bg.svg');
  background-size: cover;
  background-attachment: fixed;
}

.auth-container {
  background-color: var(--card);
  border-radius: var(--radius);
  box-shadow: var(--shadow-lg);
  width: 100%;
  max-width: 420px;
  padding: 2rem;
  animation: fadeIn 0.5s ease-out;
  position: relative;
  overflow: hidden;
  border: 1px solid var(--border);
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Logo and Header */
.auth-logo {
  display: flex;
  justify-content: center;
  margin-bottom: 1.5rem;
}

.auth-logo img {
  height: 50px;
  width: auto;
}

.auth-container h2 {
  font-weight: 700;
  font-size: 1.5rem;
  color: var(--card-foreground);
  text-align: center;
  margin-bottom: 0.5rem;
  letter-spacing: -0.025em;
}

.auth-subtitle {
  color: var(--muted);
  text-align: center;
  margin-bottom: 1.5rem;
  font-size: 0.95rem;
}

/* Form Elements */
.field {
  margin-bottom: 1.25rem;
}

.field label {
  display: block;
  font-size: 0.875rem;
  font-weight: 500;
  margin-bottom: 0.5rem;
  color: var(--card-foreground);
}

.field input[type="email"],
.field input[type="password"],
.field input[type="text"],
.field input[type="date"] {
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 0.95rem;
  border: 1px solid var(--border);
  border-radius: var(--radius);
  background-color: white;
  transition: border-color 0.15s, box-shadow 0.15s;
  color: var(--foreground);
  box-sizing: border-box;
  box-shadow: var(--shadow-sm);
}

.field input:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px var(--primary-focus);
}

.field input:hover {
  border-color: #cbd5e1;
}

/* Remember me checkbox */
.remember-me {
  display: flex;
  align-items: center;
  margin-bottom: 1.25rem;
}

.remember-me input[type="checkbox"] {
  width: 1rem;
  height: 1rem;
  margin-right: 0.5rem;
  accent-color: var(--primary);
}

.remember-me label {
  font-size: 0.875rem;
  color: var(--muted);
}

/* Button Styles */
.actions {
  margin-top: 1.5rem;
}

.actions input[type="submit"] {
  width: 100%;
  background-color: var(--primary);
  color: white;
  border: none;
  padding: 0.75rem 1rem;
  font-size: 0.95rem;
  font-weight: 600;
  border-radius: var(--radius);
  cursor: pointer;
  transition: background-color 0.15s, transform 0.15s, box-shadow 0.15s;
  box-shadow: 0 4px 6px rgba(99, 102, 241, 0.25);
}

.actions input[type="submit"]:hover {
  background-color: var(--primary-hover);
  transform: translateY(-1px);
  box-shadow: 0 6px 10px rgba(99, 102, 241, 0.3);
}

.actions input[type="submit"]:active {
  transform: translateY(0);
}

/* Links area */
.devise-links {
  margin-top: 1.5rem;
  text-align: center;
  font-size: 0.875rem;
  color: var(--muted);
  border-top: 1px solid var(--border);
  padding-top: 1.5rem;
}

.devise-links a {
  color: var(--primary);
  text-decoration: none;
  font-weight: 500;
  transition: color 0.15s;
}

.devise-links a:hover {
  color: var(--primary-hover);
  text-decoration: underline;
}

/* Social Login */
.social-login {
  margin: 1.5rem 0;
  display: flex;
  gap: 0.75rem;
}

.social-login-divider {
  position: relative;
  text-align: center;
  margin: 1.5rem 0;
  color: var(--muted);
  font-size: 0.875rem;
}

.social-login-divider:before,
.social-login-divider:after {
  content: "";
  position: absolute;
  top: 50%;
  width: calc(50% - 1.5rem);
  height: 1px;
  background-color: var(--border);
}

.social-login-divider:before {
  left: 0;
}

.social-login-divider:after {
  right: 0;
}

.social-button {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.75rem;
  border: 1px solid var(--border);
  border-radius: var(--radius);
  background-color: white;
  color: var(--foreground);
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.15s, border-color 0.15s, box-shadow 0.15s;
}

.social-button:hover {
  background-color: #f8fafc;
  box-shadow: var(--shadow);
}

.social-button i {
  margin-right: 0.5rem;
}

.social-button.google i {
  color: #ea4335;
}

.social-button.facebook i {
  color: #1877f2;
}

/* Error messages */
.field_with_errors input {
  border-color: var(--error) !important;
}

.error-message {
  color: var(--error);
  font-size: 0.75rem;
  margin-top: 0.25rem;
}

/* Animations and effects */
.auth-background {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  overflow: hidden;
}

.auth-blob {
  position: absolute;
  border-radius: 50%;
  filter: blur(40px);
  opacity: 0.4;
}

.auth-blob-1 {
  width: 300px;
  height: 300px;
  top: -100px;
  right: -100px;
  background: linear-gradient(135deg, #818cf8 0%, #6366f1 100%);
  animation: floatBlob 15s ease-in-out infinite alternate;
}

.auth-blob-2 {
  width: 250px;
  height: 250px;
  bottom: -100px;
  left: -100px;
  background: linear-gradient(135deg, #6366f1 0%, #4f46e5 100%);
  animation: floatBlob 12s ease-in-out infinite alternate-reverse;
}

@keyframes floatBlob {
  0% { transform: translate(0, 0) rotate(0deg); }
  33% { transform: translate(30px, -20px) rotate(5deg); }
  66% { transform: translate(-20px, 10px) rotate(-5deg); }
  100% { transform: translate(0, 0) rotate(0deg); }
}

/* Media Queries */
@media (max-width: 640px) {
  .auth-container {
    padding: 1.5rem;
  }

  .social-login {
    flex-direction: column;
  }
}

/* Add Font Awesome */
.auth-container .field-icon {
  position: absolute;
  left: 1rem;
  top: 50%;
  transform: translateY(-50%);
  color: var(--muted);
}

.auth-container .field-group {
  position: relative;
}

.auth-container .field-group input {
  padding-left: 2.5rem;
}

/* Authentication Page Initialization */
document.addEventListener('DOMContentLoaded', function() {
  // Add auth-page class to body
  if (document.querySelector('.auth-container') || 
      document.querySelector('form[action*="sign_in"]') ||
      document.querySelector('form[action*="sign_up"]')) {
    document.body.classList.add('auth-page');
  }

  // Create container if needed
  const form = document.querySelector('form[action*="sign_in"], form[action*="sign_up"]');
  const heading = document.querySelector('h2');

  if (form && !document.querySelector('.auth-container')) {
    const authContainer = document.createElement('div');
    authContainer.className = 'auth-container';

    // Create background effects
    const background = document.createElement('div');
    background.className = 'auth-background';

    const blob1 = document.createElement('div');
    blob1.className = 'auth-blob auth-blob-1';
    background.appendChild(blob1);

    const blob2 = document.createElement('div');
    blob2.className = 'auth-blob auth-blob-2';
    background.appendChild(blob2);

    authContainer.appendChild(background);

    // Add logo
    const logo = document.createElement('div');
    logo.className = 'auth-logo';
    logo.innerHTML = '<img src="/assets/logo.svg" alt="Logo">';
    authContainer.appendChild(logo);

    // Wrap existing content
    form.parentNode.insertBefore(authContainer, form);

    if (heading) {
      authContainer.appendChild(heading);

      // Add subtitle
      const subtitle = document.createElement('p');
      subtitle.className = 'auth-subtitle';

      if (heading.textContent.includes('Log in') || heading.textContent.includes('Sign in')) {
        subtitle.textContent = 'Welcome back! Please enter your credentials to continue.';
      } else if (heading.textContent.includes('Sign up')) {
        subtitle.textContent = 'Create an account to get started with our platform.';
      }

      heading.insertAdjacentElement('afterend', subtitle);
    }

    // Add icons to form fields
    const emailField = form.querySelector('input[type="email"]');
    if (emailField && emailField.parentNode) {
      const fieldGroup = document.createElement('div');
      fieldGroup.className = 'field-group';

      const icon = document.createElement('i');
      icon.className = 'field-icon fas fa-envelope';
      fieldGroup.appendChild(icon);

      emailField.parentNode.insertBefore(fieldGroup, emailField);
      fieldGroup.appendChild(emailField);
    }

    const passwordFields = form.querySelectorAll('input[type="password"]');
    passwordFields.forEach(field => {
      if (field.parentNode) {
        const fieldGroup = document.createElement('div');
        fieldGroup.className = 'field-group';

        const icon = document.createElement('i');
        icon.className = 'field-icon fas fa-lock';
        fieldGroup.appendChild(icon);

        field.parentNode.insertBefore(fieldGroup, field);
        fieldGroup.appendChild(field);
      }
    });

    const nameFields = form.querySelectorAll('input[id*="name"]');
    nameFields.forEach(field => {
      if (field.parentNode) {
        const fieldGroup = document.createElement('div');
        fieldGroup.className = 'field-group';

        const icon = document.createElement('i');
        icon.className = 'field-icon fas fa-user';
        fieldGroup.appendChild(icon);

        field.parentNode.insertBefore(fieldGroup, field);
        fieldGroup.appendChild(field);
      }
    });

    const dateFields = form.querySelectorAll('input[type="date"]');
    dateFields.forEach(field => {
      if (field.parentNode) {
        const fieldGroup = document.createElement('div');
        fieldGroup.className = 'field-group';

        const icon = document.createElement('i');
        icon.className = 'field-icon fas fa-calendar';
        fieldGroup.appendChild(icon);

        field.parentNode.insertBefore(fieldGroup, field);
        fieldGroup.appendChild(field);
      }
    });

    // Add social login for sign in
    if (heading && heading.textContent.includes('Log in')) {
      const actions = form.querySelector('.actions');
      if (actions) {
        const divider = document.createElement('div');
        divider.className = 'social-login-divider';
        divider.textContent = 'OR';
        actions.insertAdjacentElement('afterend', divider);

        const socialLogin = document.createElement('div');
        socialLogin.className = 'social-login';
        socialLogin.innerHTML = `
          <button type="button" class="social-button google">
            <i class="fab fa-google"></i> Google
          </button>
          <button type="button" class="social-button facebook">
            <i class="fab fa-facebook-f"></i> Facebook
          </button>
        `;
        divider.insertAdjacentElement('afterend', socialLogin);
      }
    }

    authContainer.appendChild(form);

    // Move links to container
    const links = document.querySelector('.devise-links');
    if (links) {
      authContainer.appendChild(links);
    }
  }
});
