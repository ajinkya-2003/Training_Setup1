/* Premium Authentication Theme */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

:root {
  /* Core Colors */
  --primary: #6366f1;
  --primary-dark: #4f46e5;
  --primary-light: #818cf8;
  --primary-50: rgba(99, 102, 241, 0.05);
  --primary-100: rgba(99, 102, 241, 0.1);
  --primary-200: rgba(99, 102, 241, 0.2);
  --success: #10b981;
  --success-dark: #059669;
  --success-50: rgba(16, 185, 129, 0.05);
  --error: #ef4444;
  --error-dark: #b91c1c;
  --error-50: rgba(239, 68, 68, 0.05);
  --neutral-50: #f9fafb;
  --neutral-100: #f3f4f6;
  --neutral-200: #e5e7eb;
  --neutral-300: #d1d5db;
  --neutral-400: #9ca3af;
  --neutral-500: #6b7280;
  --neutral-600: #4b5563;
  --neutral-700: #374151;
  --neutral-800: #1f2937;
  --neutral-900: #111827;

  /* Visual */
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  --shadow-inner: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06);
  --shadow-focus: 0 0 0 3px var(--primary-100);

  /* Typography */
  --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;

  /* Gradients */
  --gradient-primary: linear-gradient(135deg, var(--primary) 0%, #8b5cf6 100%);
  --gradient-primary-light: linear-gradient(135deg, var(--primary-light) 0%, #a78bfa 100%);
  --gradient-dark: linear-gradient(135deg, var(--neutral-800) 0%, var(--neutral-900) 100%);

  /* Animation */
  --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);
  --transition: 300ms cubic-bezier(0.4, 0, 0.2, 1);
  --transition-slow: 500ms cubic-bezier(0.4, 0, 0.2, 1);
  --easing-standard: cubic-bezier(0.4, 0, 0.2, 1);

  /* Spacing */
  --spacing-xs: 0.25rem;  /* 4px */
  --spacing-sm: 0.5rem;   /* 8px */
  --spacing: 1rem;        /* 16px */
  --spacing-md: 1.5rem;   /* 24px */
  --spacing-lg: 2rem;     /* 32px */
  --spacing-xl: 2.5rem;   /* 40px */
  --spacing-2xl: 3rem;    /* 48px */

  /* Border */
  --border-radius-sm: 0.25rem;
  --border-radius: 0.375rem;
  --border-radius-md: 0.5rem;
  --border-radius-lg: 0.75rem;
  --border-radius-xl: 1rem;
  --border-radius-2xl: 1.5rem;
  --border-radius-full: 9999px;
}

/* =========================
   Base Styles
   ========================= */

body.auth-page {
  background-color: #f9fafb;
  font-family: var(--font-sans);
  color: var(--neutral-800);
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  margin: 0;
  background-image: url('/assets/auth-bg.svg');
  background-attachment: fixed;
  background-size: cover;
}

.auth-layout {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  position: relative;
}

/* =========================
   Auth Container Styles
   ========================= */

.auth-container {
  max-width: 480px;
  width: 100%;
  margin: var(--spacing-xl) auto;
  background: rgba(255, 255, 255, 0.98);
  border-radius: var(--border-radius-xl);
  box-shadow: var(--shadow-xl);
  overflow: hidden;
  position: relative;
  animation: fadeIn 0.6s var(--easing-standard);
  border: 1px solid var(--neutral-200);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Brand Header */
.auth-brand {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-lg) var(--spacing-lg) 0;
}

.auth-brand img {
  height: 48px;
  width: 48px;
}

/* Auth Header */
.auth-header {
  padding: var(--spacing) var(--spacing-xl) var(--spacing-sm);
  text-align: center;
}

.auth-container h2 {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--neutral-900);
  margin-bottom: var(--spacing-xs);
  letter-spacing: -0.025em;
}

.auth-subtitle {
  font-size: 0.938rem;
  color: var(--neutral-500);
  margin-bottom: var(--spacing);
  letter-spacing: -0.01em;
}

/* Auth Body */
.auth-body {
  padding: var(--spacing) var(--spacing-xl) var(--spacing-xl);
}

/* Form Fields */
.field {
  margin-bottom: var(--spacing-md);
  position: relative;
}

.field label {
  display: block;
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--neutral-700);
  margin-bottom: var(--spacing-xs);
}

.field-group {
  position: relative;
}

.field-icon {
  position: absolute;
  top: 50%;
  left: var(--spacing);
  transform: translateY(-50%);
  color: var(--neutral-400);
  pointer-events: none;
  transition: color var(--transition-fast);
}

.field-group input {
  padding-left: var(--spacing-xl) !important;
}

.field input[type="email"],
.field input[type="password"],
.field input[type="text"],
.field input[type="number"],
.field input[type="tel"],
.field input[type="date"] {
  width: 100%;
  padding: var(--spacing) var(--spacing-md);
  font-size: 0.938rem;
  border: 1px solid var(--neutral-300);
  border-radius: var(--border-radius-md);
  background-color: white;
  color: var(--neutral-800);
  font-family: var(--font-sans);
  transition: all var(--transition-fast);
  box-shadow: var(--shadow-sm);
}

.field input:hover {
  border-color: var(--neutral-400);
}

.field input:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: var(--shadow-focus);
}

.field:focus-within .field-icon {
  color: var(--primary);
}

/* Error Styles */
.field_with_errors input {
  border-color: var(--error) !important;
  background-color: var(--error-50);
}

.field_with_errors label {
  color: var(--error-dark);
}

.error-message {
  color: var(--error);
  font-size: 0.813rem;
  margin-top: var(--spacing-xs);
  display: flex;
  align-items: center;
}

.error-message::before {
  font-family: "Font Awesome 6 Free";
  content: "\f071";
  font-weight: 900;
  margin-right: var(--spacing-xs);
  font-size: 0.75rem;
}

/* Submit Button */
.actions {
  margin-top: var(--spacing-lg);
}

.btn-primary {
  width: 100%;
  background: var(--gradient-primary);
  color: white;
  border: none;
  padding: var(--spacing) var(--spacing-md);
  border-radius: var(--border-radius-md);
  font-size: 0.938rem;
  font-weight: 600;
  cursor: pointer;
  transition: all var(--transition-fast);
  box-shadow: 0 4px 12px var(--primary-200);
  position: relative;
  overflow: hidden;
  letter-spacing: 0.01em;
  font-family: var(--font-sans);
}

.btn-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 16px var(--primary-200);
}

.btn-primary:active {
  transform: translateY(0);
  box-shadow: 0 2px 8px var(--primary-200);
}

.btn-primary .btn-loader {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: none;
}

.btn-primary.loading {
  color: transparent;
}

.btn-primary.loading .btn-loader {
  display: block;
}

/* Button Shine Effect */
.btn-shine {
  position: relative;
  overflow: hidden;
}

.btn-shine::after {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.15), transparent);
  transform: rotate(30deg) translateY(-100%);
  transition: transform 0.8s;
  pointer-events: none;
}

.btn-shine:hover::after {
  transform: rotate(30deg) translateY(100%);
}

/* Remember Me */
.auth-extras {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: var(--spacing-md);
  margin-bottom: var(--spacing-lg);
}

.remember-me {
  display: flex;
  align-items: center;
}

.remember-me input[type="checkbox"] {
  -webkit-appearance: none;
  appearance: none;
  width: 1.1rem;
  height: 1.1rem;
  border: 1.5px solid var(--neutral-400);
  border-radius: var(--border-radius-sm);
  margin: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all var(--transition-fast);
  background-color: white;
}

.remember-me input[type="checkbox"]:checked {
  background-color: var(--primary);
  border-color: var(--primary);
}

.remember-me input[type="checkbox"]:checked::before {
  content: "\f00c";
  font-family: "Font Awesome 6 Free";
  font-weight: 900;
  font-size: 0.7rem;
  color: white;
}

.remember-me input[type="checkbox"]:focus {
  box-shadow: var(--shadow-focus);
}

.remember-me label {
  font-size: 0.875rem;
  color: var(--neutral-600);
  margin-left: var(--spacing-xs);
  cursor: pointer;
}

.forgot-password a {
  font-size: 0.875rem;
  color: var(--primary);
  text-decoration: none;
  transition: color var(--transition-fast);
}

.forgot-password a:hover {
  color: var(--primary-dark);
  text-decoration: underline;
}

/* Divider */
.auth-divider {
  display: flex;
  align-items: center;
  margin: var(--spacing-lg) 0;
  color: var(--neutral-400);
  font-size: 0.875rem;
}

.auth-divider::before,
.auth-divider::after {
  content: "";
  flex: 1;
  height: 1px;
  background-color: var(--neutral-200);
}

.auth-divider::before {
  margin-right: var(--spacing);
}

.auth-divider::after {
  margin-left: var(--spacing);
}

/* Social Login */
.social-login {
  display: flex;
  gap: var(--spacing-sm);
  margin-bottom: var(--spacing-lg);
}

.social-btn {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--spacing) var(--spacing-xs);
  border: 1px solid var(--neutral-300);
  border-radius: var(--border-radius-md);
  background-color: white;
  color: var(--neutral-700);
  font-size: 0.875rem;
  cursor: pointer;
  transition: all var(--transition-fast);
  box-shadow: var(--shadow-sm);
}

.social-btn i {
  font-size: 1.1rem;
  margin-right: var(--spacing-xs);
}

.social-btn:hover {
  border-color: var(--neutral-400);
  background-color: var(--neutral-50);
  box-shadow: var(--shadow);
}

.social-btn.google i {
  color: #ea4335;
}

.social-btn.facebook i {
  color: #1877f2;
}

.social-btn.twitter i {
  color: #1da1f2;
}

/* Auth Links */
.devise-links {
  text-align: center;
  padding-top: var(--spacing);
  margin-top: var(--spacing-lg);
  border-top: 1px solid var(--neutral-200);
  font-size: 0.875rem;
  color: var(--neutral-600);
}

.devise-links a {
  color: var(--primary);
  text-decoration: none;
  font-weight: 500;
  transition: all var(--transition-fast);
}

.devise-links a:hover {
  color: var(--primary-dark);
  text-decoration: underline;
}

/* Responsive Styles */
@media (max-width: 640px) {
  .auth-container {
    margin: var(--spacing) auto;
    max-width: 90%;
    border-radius: var(--border-radius-lg);
  }

  .auth-header {
    padding: var(--spacing) var(--spacing-lg) var(--spacing-xs);
  }

  .auth-body {
    padding: var(--spacing-xs) var(--spacing-lg) var(--spacing-lg);
  }

  .auth-extras {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-sm);
  }

  .forgot-password {
    margin-left: 1.6rem; /* Align with checkbox label */
  }

  .social-login {
    flex-direction: column;
  }
}

/* Form Field Types */
.field.email-field .field-icon::before {
  content: "\f0e0"; /* envelope */
}

.field.password-field .field-icon::before {
  content: "\f023"; /* lock */
}

.field.name-field .field-icon::before {
  content: "\f007"; /* user */
}

.field.phone-field .field-icon::before {
  content: "\f095"; /* phone */
}

.field.dob-field .field-icon::before {
  content: "\f133"; /* calendar */
}

.field.age-field .field-icon::before {
  content: "\f1ae"; /* child */
}

/* Floating Blobs */
.auth-blob {
  position: fixed;
  border-radius: 50%;
  filter: blur(60px);
  z-index: -1;
  opacity: 0.4;
}

.auth-blob-1 {
  width: 400px;
  height: 400px;
  top: -200px;
  right: -150px;
  background: radial-gradient(circle, rgba(99, 102, 241, 0.6) 0%, rgba(139, 92, 246, 0.4) 50%, rgba(99, 102, 241, 0.2) 100%);
  animation: float 18s ease-in-out infinite alternate;
}

.auth-blob-2 {
  width: 300px;
  height: 300px;
  bottom: -100px;
  left: -100px;
  background: radial-gradient(circle, rgba(139, 92, 246, 0.4) 0%, rgba(99, 102, 241, 0.3) 50%, rgba(139, 92, 246, 0.2) 100%);
  animation: float 15s ease-in-out 1s infinite alternate-reverse;
}

@keyframes float {
  0% { transform: translate(0, 0) rotate(0deg); }
  33% { transform: translate(30px, -30px) rotate(2deg); }
  66% { transform: translate(-20px, 20px) rotate(-1deg); }
  100% { transform: translate(0, 0) rotate(0deg); }
}

/* Initialization Script */
document.addEventListener('DOMContentLoaded', function() {
  // Add the auth-page class to body
  document.body.classList.add('auth-page');

  // Create auth layout wrapper
  const container = document.querySelector('.auth-container');
  if (container && !document.querySelector('.auth-layout')) {
    const wrapper = document.createElement('div');
    wrapper.className = 'auth-layout';
    container.parentNode.insertBefore(wrapper, container);
    wrapper.appendChild(container);

    // Add blobs
    const blob1 = document.createElement('div');
    blob1.className = 'auth-blob auth-blob-1';
    wrapper.appendChild(blob1);

    const blob2 = document.createElement('div');
    blob2.className = 'auth-blob auth-blob-2';
    wrapper.appendChild(blob2);
  }

  if (container) {
    // Add brand at the top
    if (!container.querySelector('.auth-brand')) {
      const brand = document.createElement('div');
      brand.className = 'auth-brand';
      brand.innerHTML = '<img src="/assets/auth-logo.svg" alt="Logo">';
      container.insertBefore(brand, container.firstChild);
    }

    // Add subtitle if there's a heading
    const heading = container.querySelector('h2');
    if (heading && !container.querySelector('.auth-subtitle')) {
      const subtitle = document.createElement('p');
      subtitle.className = 'auth-subtitle';

      if (heading.textContent.toLowerCase().includes('sign in') || 
          heading.textContent.toLowerCase().includes('log in')) {
        subtitle.textContent = 'Welcome back! Please enter your details.';
      } else if (heading.textContent.toLowerCase().includes('sign up') ||
                heading.textContent.toLowerCase().includes('register')) {
        subtitle.textContent = 'Create an account to get started.';
      } else if (heading.textContent.toLowerCase().includes('password')) {
        subtitle.textContent = 'Enter your email and we\'ll send you reset instructions.';
      }

      // Add the subtitle after the heading
      heading.insertAdjacentElement('afterend', subtitle);
    }

    // Create header and body divs
    if (!container.querySelector('.auth-header') && heading) {
      const header = document.createElement('div');
      header.className = 'auth-header';
      heading.parentNode.insertBefore(header, heading);
      header.appendChild(heading);

      // Move subtitle to header if it exists
      const subtitle = container.querySelector('.auth-subtitle');
      if (subtitle) {
        header.appendChild(subtitle);
      }
    }

    // Process form
    const form = container.querySelector('form');
    if (form && !container.querySelector('.auth-body')) {
      const body = document.createElement('div');
      body.className = 'auth-body';

      // Insert auth-body after header
      const header = container.querySelector('.auth-header');
      if (header) {
        header.insertAdjacentElement('afterend', body);
      } else {
        form.insertAdjacentElement('beforebegin', body);
      }

      // Add field icons and move appropriate elements to body
      const formElements = Array.from(form.children);

      formElements.forEach(element => {
        if (element.classList.contains('field')) {
          body.appendChild(element);

          const input = element.querySelector('input');
          const label = element.querySelector('label');

          if (input && !element.querySelector('.field-group')) {
            // Create field group for icon placement
            const fieldGroup = document.createElement('div');
            fieldGroup.className = 'field-group';

            // Add field icon
            const icon = document.createElement('i');
            icon.className = 'field-icon fa-solid';
            fieldGroup.appendChild(icon);

            // Wrap input in field group
            input.parentNode.insertBefore(fieldGroup, input);
            fieldGroup.appendChild(input);
          }

          // Add specific classes based on field content
          if (label) {
            if (label.textContent.toLowerCase().includes('email')) {
              element.classList.add('email-field');
            } else if (label.textContent.toLowerCase().includes('password')) {
              element.classList.add('password-field');
            } else if (label.textContent.toLowerCase().includes('name')) {
              element.classList.add('name-field');
            } else if (label.textContent.toLowerCase().includes('age')) {
              element.classList.add('age-field');
            } else if (label.textContent.toLowerCase().includes('birth')) {
              element.classList.add('dob-field');
            } else if (label.textContent.toLowerCase().includes('phone')) {
              element.classList.add('phone-field');
            }
          }
        } else if (element.classList.contains('remember-me')) {
          // Create extras container if it doesn't exist
          let extras = container.querySelector('.auth-extras');
          if (!extras) {
            extras = document.createElement('div');
            extras.className = 'auth-extras';
            body.appendChild(extras);
          }
          extras.appendChild(element);

          // Check if "Forgot password" link exists in devise-links
          const deviseLinks = container.querySelector('.devise-links');
          if (deviseLinks) {
            const links = Array.from(deviseLinks.querySelectorAll('a'));
            const forgotPasswordLink = links.find(link => 
              link.textContent.toLowerCase().includes('forgot') || 
              link.textContent.toLowerCase().includes('reset')
            );

            if (forgotPasswordLink) {
              // Create forgot password container
              const forgotContainer = document.createElement('div');
              forgotContainer.className = 'forgot-password';
              forgotContainer.appendChild(forgotPasswordLink.cloneNode(true));
              extras.appendChild(forgotContainer);

              // Remove the original link
              forgotPasswordLink.remove();
            }
          }
        } else if (element.classList.contains('actions')) {
          body.appendChild(element);

          const submitBtn = element.querySelector('input[type="submit"]');
          if (submitBtn) {
            submitBtn.classList.add('btn-primary', 'btn-shine');

            // Add loading spinner
            const loader = document.createElement('span');
            loader.className = 'btn-loader';
            loader.innerHTML = '<i class="fa-solid fa-circle-notch fa-spin"></i>';
            submitBtn.appendChild(loader);
          }
        } else if (element.classList.contains('devise-links')) {
          // Move to end of container
          container.appendChild(element);
        } else {
          // Move other elements to body
          body.appendChild(element);
        }
      });

      // Add social login for sign-in forms if not present
      if (heading && (heading.textContent.toLowerCase().includes('sign in') || 
          heading.textContent.toLowerCase().includes('log in')) && 
          !container.querySelector('.social-login')) {

        // Add divider
        const divider = document.createElement('div');
        divider.className = 'auth-divider';
        divider.textContent = 'or continue with';
        body.appendChild(divider);

        // Add social buttons
        const socialLogin = document.createElement('div');
        socialLogin.className = 'social-login';
        socialLogin.innerHTML = `
          <button type="button" class="social-btn google">
            <i class="fab fa-google"></i> Google
          </button>
          <button type="button" class="social-btn facebook">
            <i class="fab fa-facebook-f"></i> Facebook
          </button>
        `;
        body.appendChild(socialLogin);
      }
    }
  }
});
